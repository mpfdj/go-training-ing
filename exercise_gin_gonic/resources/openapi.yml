openapi: 3.0.0
info:
  title: IBDb Review API
  version: 0.0.1
  license:
    name: MIT
    identifier: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: http://localhost:8000
components:
  schemas:
    Book:
      type: object
      example:
        id: 2
        title: The Lord of the Rings
        isbn: 978-0544003415
        language: English
        publisher: Mariner Books
        numPages: 1216
      required:
        - id
        - title
        - isbn
        - language
        - publisher
        - numPages
      properties:
        id:
          type: integer
        title:
          type: string
        isbn:
          type: string
        language:
          type: string
        publisher:
          type: string
        numPages:
          type: integer
    Review:
      type: object
      required:
        - id
        - bookId
        - rating
        - comment
      example:
        id: 1
        bookId: 2
        rating: 5
        comment: This is a great book!
      properties:
        id:
          type: integer
        bookId:
          type: integer
        rating:
          type: integer
        comment:
          type: string
    CreateReviewRequest:
      type: object
      required:
        - rating
        - comment
      example:
        rating: 5
        comment: This is a great book!
      properties:
        rating:
          type: integer
        comment:
          type: string
    Error:
      type: object
      example:
        message: Book not found
      required:
        - message
      properties:
        message:
          type: string

paths:
  /api/books/{bookId}:
    get:
      summary: Get book details by ID
      security: []
      operationId: getBook
      parameters:
        - name: bookId
          in: path
          description: Book ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Book details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/books/{bookId}/reviews:
    get:
      summary: List reviews for a book
      security: []
      operationId: listReviews
      parameters:
        - name: bookId
          in: path
          description: Book ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Reviews for this book
          content:
            application/json:
              schema:
                type: array
                $ref: "#/components/schemas/Review"
        "404":
          description: Book not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new review
      security: []
      operationId: createReview
      parameters:
        - name: bookId
          in: path
          description: Book ID
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReviewRequest"
        required: true
      responses:
        "200":
          description: Review created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Review"
        "400":
          description: Invalid review
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"